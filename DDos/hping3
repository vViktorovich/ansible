https://codeby.net/threads/stress-test-seti-dos-s-ispolzovaniem-hping3-i-spufingom-ip-v-kali-linux.67700/

hping3 следует использовать для…
Traceroute/ping/probe (трассировки/пинга/зондирования) хостов за файерволом, которые блокируют попытки использовать стандартные утилиты.
Выполнения сканирования простоя (в настоящее время реализуется в nmap с лёгким пользовательским интерфейсом).
Тестирование правил файервола.
Тестирование IDS (систем обнаружения вторжения).
Эксплуатации известных зависимостей в стеках TCP/IP.
Сетевых исследованиях
Изучении TCP/IP (hping была использована в сетевых курсах AFAIK).
Написании реальных приложений, связанных с TCP/IP тестированием и безопасностью.
При автоматизированных тестах по фильтрации трафика.
Создания рабочей модели эксплойтов.
Исследований в свере сетей и безопасности, когда нужно эмулировать комплексное TCP/IP поведение.
Прототипах систем обнаружения вторжения (IDS)
Простых в использовании утилитах с интерфейсом Tk.

root@WebWare-Kali:~# hping3 -c 10000 -d 120 -S -w 64 -p 21 --flood --rand-source 192.168.1.37

hping3 = Имя бинарника приложения.
-c 100000 = Количество пакетов для отправки.
-d 120 = Размер каждого пакета, который будет отправлен на целевую машину.
-S = Я отправляю только пакеты SYN.
-w 64 = Размер окна TCP.
-p 21 = Порт назначения (используется 21 порт FTP). Вы можете использовать здесь любой порт.
–flood = Отправка пакетов так быстро, как возможно, не заботясь об отображении входящих пакетов. Решим флуда.
–rand-source = Использование рандомных IP адресов источника. Вы также можете использовать -a или –spoof чтобы спрятать имя хоста. Подробности по man hping3
192.168.1.37 = Целевой IP адрес или IP адрес целевой машины. Также вы можете использовать здесь сайт. В моём случае, тестирование происходит в лабораторных условиях, в пределах локальной сети.

Так как узнать, работает ли это? В режиме флуда hping3 не проверяет полученные ответы (в любом случае мы не могли бы это сделать, поскольку мы использовали флаг –rand-souce, означающий, что IP адрес источника больше не ваш).

Program top
us — (User CPU time) время, затраченное на работу программ пользователей
sy — (System CPU time) время, затраченное на работу процессов ядра
ni — (Nice CPU time) время, затраченное на работу программ с измененным приоритетом
id — простой процессора
wa — (iowait) время, затраченное на завершение ввода-вывода
hi — (Hardware IRQ) время, затраченное на обработку hardware-прерываний
si — (Software Interrupts) время, затраченное на работу обработку software-прерываний (network)
st — (Steal Time) время, «украденное» гипервизором у этой виртуальной машины для других задач (например работа другой виртуальной машины)
