https://codeby.net/threads/stress-test-seti-dos-s-ispolzovaniem-hping3-i-spufingom-ip-v-kali-linux.67700/
http://bit.samag.ru/archive/article/1712

hping3 следует использовать для…
Traceroute/ping/probe (трассировки/пинга/зондирования) хостов за файерволом, которые блокируют попытки использовать стандартные утилиты.
Выполнения сканирования простоя (в настоящее время реализуется в nmap с лёгким пользовательским интерфейсом).
Тестирование правил файервола.
Тестирование IDS (систем обнаружения вторжения).
Эксплуатации известных зависимостей в стеках TCP/IP.
Сетевых исследованиях
Изучении TCP/IP (hping была использована в сетевых курсах AFAIK).
Написании реальных приложений, связанных с TCP/IP тестированием и безопасностью.
При автоматизированных тестах по фильтрации трафика.
Создания рабочей модели эксплойтов.
Исследований в свере сетей и безопасности, когда нужно эмулировать комплексное TCP/IP поведение.
Прототипах систем обнаружения вторжения (IDS)
Простых в использовании утилитах с интерфейсом Tk.

root@WebWare-Kali:~# hping3 -c 10000 -d 120 -S -w 64 -p 21 --flood --rand-source 192.168.1.37

hping3 = Имя бинарника приложения.
-c 100000 = Количество пакетов для отправки.
-d 120 = Размер каждого пакета, который будет отправлен на целевую машину.
-S = Я отправляю только пакеты SYN.
-w 64 = Размер окна TCP.
-p 21 = Порт назначения (используется 21 порт FTP). Вы можете использовать здесь любой порт.
–flood = Отправка пакетов так быстро, как возможно, не заботясь об отображении входящих пакетов. Решим флуда.
–rand-source = Использование рандомных IP адресов источника. Вы также можете использовать -a или –spoof чтобы спрятать имя хоста. Подробности по man hping3
192.168.1.37 = Целевой IP адрес или IP адрес целевой машины. Также вы можете использовать здесь сайт. В моём случае, тестирование происходит в лабораторных условиях, в пределах локальной сети.

Так как узнать, работает ли это? В режиме флуда hping3 не проверяет полученные ответы (в любом случае мы не могли бы это сделать, поскольку мы использовали флаг –rand-souce, означающий, что IP адрес источника больше не ваш).

Program top
us — (User CPU time) время, затраченное на работу программ пользователей
sy — (System CPU time) время, затраченное на работу процессов ядра
ni — (Nice CPU time) время, затраченное на работу программ с измененным приоритетом
id — простой процессора
wa — (iowait) время, затраченное на завершение ввода-вывода
hi — (Hardware IRQ) время, затраченное на обработку hardware-прерываний
si — (Software Interrupts) время, затраченное на работу обработку software-прерываний (network)
st — (Steal Time) время, «украденное» гипервизором у этой виртуальной машины для других задач (например работа другой виртуальной машины)
**********************************

Пробная атака TCP SYN на целевой веб-сервер может быть организована с помощью утилиты HPING3 [14].

hping3 -S <IP address of protected server> -i u1 --rand-source -p 80

Hping3 будет отправлять SYN-запросы на порт 80 (-p). Атакуемый сервер будет вынужден отвечать с SYN+ACK. 
Так как мы используем случайный IP-адрес (rand-source), соединение никогда не будет выполнено. 
В результате сервер будет избыточно загружен обработкой мусорного трафика, что может сказаться на работе легитимных 
пользователей.
*************************************************************
Примером TCP flood является атака TCP RST, рассмотренная в статье [2]. Синтаксис команды может выглядеть так:

hping3 <IP address of protected server> -p 80 -R --rand-source --faster

В этом случае сервер вынужден обрабатывать шквал RST-запросов, что приводит к его избыточной нагрузке. 
-R показывает, что выполнить надо атаку RST.
***********************************************************
Примеры ICMP и UDP flood-атак:

UDP flood: hping3 --udp <IP address of protected server> -i u1 --rand-source -p 80

ICMP flood: Hping3 --icmp <IP address of protected server> -i u1 --rand-source

Цель ICMP и UDP flood – привести к нестабильности работы системы, заставить ее терять пакеты, 
при этом объем трафика может быть слишком большим.

Тестируем атаку на службу разрешения имен DNS – DNS flood. Эту атаку можно классифицировать и как прикладную, 
поскольку она может привести к отказу сервера, и как сетевой флуд, так как приводит к избыточной загрузке канала.

hping3 --udp <IP address of protected server> -i u1 --rand-source --destport 53 -x -g 500 -m 1000 -d 1000 & hping3 -- udp <IP address of protected server> -i u1 --rand-source --destport 53)

Выполните реальный HTTP-запрос к целевому веб-серверу с той же рабочей станции, с которой осуществляется атака. 
При выполнении запроса к веб-серверу легитимный трафик должен проходить, а пользователь получать доступ к серверу 
даже в процессе атаки. То есть блокироваться должен только трафик атаки. Если же этого не происходит, то система 
противодействия атакам не может ее правильно отразить. А если мощность сервера достаточная? Для усложнения задачи 
целесообразно провести несколько атак единовременно, тем самым смоделировав так называемую многовекторную атаку


Еще одной популярной атакой на приложения является HTTP page flood. 
Именно этот способ успешно применила небезызвестная группа Anonymous для атак на ряд государственных учреждений США. 
Для этих целей применялись утилиты HOIC и LOIC [15]. Следует проверить системы отражения DDoS-атак на эффективную борьбу с 
этими средствами.
